version: '3.8'

services:
  setup:
    hostname: elk_setup
    container_name: elk_setup
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    user: "0"
    command: >
      bash -c '
        echo "Setting kibana_system password";
        until curl -X POST -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" http://elastic:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_SYSTEM_PASSWORD}\"}" | grep -q "^{}"; do sleep 5; done;
        echo "All done!";
      '
    networks:
      - elk

  elastic:
    depends_on:
      - setup
    hostname: elk_elastic
    container_name: elk_elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    restart: always
    ports:
      - "${ES_PORT}:9200"
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      xpack.security.audit.enabled: "true"
      xpack.license.self_generated.type: basic
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elk

  kibana:
    hostname: elk_kibana
    container_name: elk_kibana
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elastic:9200
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
      SERVER_BASEPATH: ${SERVER_BASE_PATH}
      SERVER_PUBLICBASEURL: ${SERVER_PUBLIC_BASEURL}
    ports:
      - "${KIBANA_PORT}:5601"
    volumes:
      - kibana:/usr/share/kibana/data
    networks:
      - elk
    depends_on:
      - elastic

  metricbeat:
    depends_on:
      - elastic
      - kibana
    hostname: elk_metricbeat
    container_name: elk_metricbeat
    image: docker.elastic.co/beats/metricbeat:${STACK_VERSION}
    restart: always
    volumes:
      - metricbeat:/usr/share/metricbeat/data
    environment:
      ELASTICSEARCH_HOST: http://elastic:9200
      KIBANA_HOST: http://kibana:5601
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
    networks:
      - elk

  filebeat:
    depends_on:
      - elastic
      - kibana
      - logstash
    hostname: elk_filebeat
    container_name: elk_filebeat
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
    restart: always
    environment:
      ELASTICSEARCH_HOSTS: http://elastic:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_HOST: http://kibana:5601
      LOGSTASH_HOST: logstash:5400
    volumes:
      - filebeat:/usr/share/filebeat/data
      - /var/log:/var/log:ro
    networks:
      - elk

  logstash:
    depends_on:
      - elastic
    hostname: elk_logstash
    container_name: elk_logstash
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    restart: always
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      ELASTICSEARCH_HOSTS: http://elastic:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
    ports:
      - "5044:5044"
      - "5959:5959"
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - elk

networks:
  elk:

volumes:
  elasticsearch:
  filebeat:
  kibana:
  metricbeat: